name: gdb & gdbserver
on:
  workflow_dispatch
jobs:
  build-x86:
    name: Build gdb & gdbserver x86
    runs-on: ubuntu-latest
    container: muslcc/x86_64:i686-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo bash build/install_deps_alpine.sh

      - name: Install dependencies workaround
        run: /bin/sh -c "apk update && apk upgrade && apk add --no-cache curl rsync sudo util-linux && cd / && curl -so ${ARCH}-cross.tgz ${HOST}/${ARCH}-cross.tgz && tar -xf ${ARCH}-cross.tgz && rm ${ARCH}-cross.tgz && cd ${ARCH}-cross"
        env:
            ARCH: i686-linux-musl
            HOST: https://more.musl.cc/9.2.1/x86_64-linux-musl
            TEMP: /tmp
            USER: 0

      - name: Build gdb
        id: build_gdb
        run: |
          export PATH="$PATH:/i686-linux-musl/bin"
          $GITHUB_WORKSPACE/build/targets/build_gdb.sh x86

      - name: List build directory
        run: ls -la /build

      - name: List build artifacts
        run: ls -la /output
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
            name: ${{ steps.build_gdb.outputs.PACKAGED_NAME }}
            path: ${{ steps.build_gdb.outputs.PACKAGED_NAME_PATH }}

  build-x86_64:
    name: Build gdb & gdbserver x86_64
    runs-on: ubuntu-latest
    container: muslcc/x86_64:x86_64-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo bash build/install_deps_alpine.sh

      - name: Build gdb
        id: build_gdb
        run: |
          $GITHUB_WORKSPACE/build/targets/build_gdb.sh x86_64

      - name: List build directory
        run: ls -la /build

      - name: List build artifacts
        run: ls -la /output
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
            name: ${{ steps.build_gdb.outputs.PACKAGED_NAME }}
            path: ${{ steps.build_gdb.outputs.PACKAGED_NAME_PATH }}


  build-armhf:
    name: Build gdb & gdbserver ARMHF
    runs-on: ubuntu-latest
    container: muslcc/x86_64:arm-linux-musleabihf
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo bash build/install_deps_alpine.sh

      - name: Install build compiler
        run: /bin/sh -c "apk update && apk upgrade && apk add --no-cache curl rsync sudo util-linux && cd / && curl -so ${ARCH}-cross.tgz ${HOST}/${ARCH}-cross.tgz && tar -xf ${ARCH}-cross.tgz && rm ${ARCH}-cross.tgz && cd ${ARCH}-cross"
        env:
            ARCH: x86_64-linux-musl
            HOST: https://more.musl.cc/9.2.1/x86_64-linux-musl
            TEMP: /tmp
            USER: 0

      - name: Install dependencies workaround
        run: /bin/sh -c "apk update && apk upgrade && apk add --no-cache curl rsync sudo util-linux && cd / && curl -so ${ARCH}-cross.tgz ${HOST}/${ARCH}-cross.tgz && tar -xf ${ARCH}-cross.tgz && rm ${ARCH}-cross.tgz && cd ${ARCH}-cross"
        env:
            ARCH: arm-linux-musleabihf
            HOST: https://more.musl.cc/9.2.1/x86_64-linux-musl
            TEMP: /tmp
            USER: 0

      - name: Build gdb
        id: build_gdb
        run: |
          export PATH="$PATH:/arm-linux-musleabihf/bin"
          $GITHUB_WORKSPACE/build/targets/build_gdb.sh armhf

      - name: List build directory
        run: ls -la /build

      - name: List build artifacts
        run: ls -la /output
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
            name: ${{ steps.build_gdb.outputs.PACKAGED_NAME }}
            path: ${{ steps.build_gdb.outputs.PACKAGED_NAME_PATH }}


  build-aarch64:
    name: Build gdb & gdbserver AARCH64
    runs-on: ubuntu-latest
    container: muslcc/x86_64:aarch64-linux-musl
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: sudo bash build/install_deps_alpine.sh

      - name: Install build compiler
        run: /bin/sh -c "apk update && apk upgrade && apk add --no-cache curl rsync sudo util-linux && cd / && curl -so ${ARCH}-cross.tgz ${HOST}/${ARCH}-cross.tgz && tar -xf ${ARCH}-cross.tgz && rm ${ARCH}-cross.tgz && cd ${ARCH}-cross"
        env:
            ARCH: x86_64-linux-musl
            HOST: https://more.musl.cc/9.2.1/x86_64-linux-musl
            TEMP: /tmp
            USER: 0

      - name: Install dependencies workaround
        run: /bin/sh -c "apk update && apk upgrade && apk add --no-cache curl rsync sudo util-linux && cd / && curl -so ${ARCH}-cross.tgz ${HOST}/${ARCH}-cross.tgz && tar -xf ${ARCH}-cross.tgz && rm ${ARCH}-cross.tgz && cd ${ARCH}-cross"
        env:
            ARCH: aarch64-linux-musl
            HOST: https://more.musl.cc/9.2.1/x86_64-linux-musl
            TEMP: /tmp
            USER: 0

      - name: Build gdb
        id: build_gdb
        run: |
          export PATH="$PATH:/aarch64-linux-musl/bin"
          $GITHUB_WORKSPACE/build/targets/build_gdb.sh aarch64

      - name: List build directory
        run: ls -la /build

      - name: List build artifacts
        run: ls -la /output
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
            name: ${{ steps.build_gdb.outputs.PACKAGED_NAME }}
            path: ${{ steps.build_gdb.outputs.PACKAGED_NAME_PATH }}